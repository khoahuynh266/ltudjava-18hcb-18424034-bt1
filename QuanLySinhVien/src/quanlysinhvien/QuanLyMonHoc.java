/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlysinhvien;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import static quanlysinhvien.QuanLyLopHoc.th;

/**
 *
 * @author yumil
 */
public class QuanLyMonHoc extends javax.swing.JFrame {
    private final int IMPORT_FILE = 1;
    private final int EXPORT_FILE = 2;
    private final int IMPORT_FILE_SCORE = 3;
    themSinhVien sv;
    xoaSinhVien xoasv;
    private String[] columName = {
        "STT", "MSSV", "Họ Tên", "Giới Tính", "CMND"
    };
    private final String[] columnNameDiem = {
        "STT", "MSSV", "Họ tên", "Điểm GK", "Điểm CK", "Điểm khác", "Điểm tổng", "Kết quả"
    };
    /**
     * Creates new form QuanLyLopHoc
     */
    public QuanLyMonHoc() {
        initComponents();
         initLayout();
    }
private void initLayout() {        
        jsvTable.setVisible(false);
        if (th.getsoLop() > 0) {
            addDataForComboBoxClass();
        } }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jbtnXoaSV = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cbLop_MonHoc = new javax.swing.JComboBox();
        btnImport = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jsvTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jbtnThoat = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jbtnImportDiem = new javax.swing.JButton();
        jbtnXemBangDiem = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jsvTableDiem = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        notifyDSDiem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý môn học");

        jButton3.setText("jButton2");

        jButton4.setText("jButton2");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Quản lý TKB");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addComponent(jButton4))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Thêm SV");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jbtnXoaSV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbtnXoaSV.setText("Xóa SV");
        jbtnXoaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnXoaSVActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Danh sách SV Môn");

        cbLop_MonHoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbLop_MonHoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--" }));
        cbLop_MonHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLop_MonHocActionPerformed(evt);
            }
        });

        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnExport.setText("Export");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        jScrollPane1.setAutoscrolls(true);

        jsvTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jsvTable.setAutoscrolls(false);
        jsvTable.setColumnSelectionAllowed(true);
        jsvTable.setFocusable(false);
        jScrollPane1.setViewportView(jsvTable);
        jsvTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lý môn học");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 727, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbtnXoaSV)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnExport))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbLop_MonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnImport)))
                        .addGap(28, 28, 28))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbLop_MonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImport))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jbtnXoaSV))
                    .addComponent(btnExport))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jbtnThoat.setText("Thoát");
        jbtnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnThoatActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Bảng Điểm");

        jbtnImportDiem.setText("Import");
        jbtnImportDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnImportDiemActionPerformed(evt);
            }
        });

        jbtnXemBangDiem.setText("Xem");
        jbtnXemBangDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnXemBangDiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jbtnImportDiem)
                .addGap(18, 18, 18)
                .addComponent(jbtnXemBangDiem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnImportDiem)
                    .addComponent(jbtnXemBangDiem))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jScrollPane2.setAutoscrolls(true);

        jsvTableDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jsvTableDiem.setAutoscrolls(false);
        jsvTableDiem.setFocusable(false);
        jScrollPane2.setViewportView(jsvTableDiem);
        jsvTableDiem.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Bảng điểm");

        notifyDSDiem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        notifyDSDiem.setForeground(new java.awt.Color(255, 0, 0));
        notifyDSDiem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notifyDSDiem.setText("notify");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(notifyDSDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notifyDSDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jbtnThoat)
                .addContainerGap(107, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnThoat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
           importExportFile("Choose file import", IMPORT_FILE);
    }//GEN-LAST:event_btnImportActionPerformed

    private void cbLop_MonHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLop_MonHocActionPerformed
        // TODO add your handling code here: 
        if(cbLop_MonHoc.getSelectedItem().toString().equals("--")){
            JOptionPane.showMessageDialog(null, "!!! Chưa Có Danh Sách Lớp");
        } else{
            addDataForTableMonHoc();
        }
        
    }//GEN-LAST:event_cbLop_MonHocActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      String lop_MH = String.valueOf(cbLop_MonHoc.getItemAt(cbLop_MonHoc.getSelectedIndex()));
      String [] item = lop_MH.split("-");
        if (cbLop_MonHoc.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(null, "!!! Vui Lòng Chọn Môn Học");
        } else {
                sv = new themSinhVien(item[0], item[1]);
                sv.setVisible(true);
        }  
//        System.out.println("className: " + item[0]);
//          System.out.println("idMH: " + item[1]);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        importExportFile("Export File", EXPORT_FILE);
    }//GEN-LAST:event_btnExportActionPerformed

    private void jbtnXoaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnXoaSVActionPerformed
        // TODO add your handling code here:
        String lop_MH = String.valueOf(cbLop_MonHoc.getItemAt(cbLop_MonHoc.getSelectedIndex()));
      String [] item = lop_MH.split("-");
        if (cbLop_MonHoc.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(null, "!!! Vui Lòng Chọn Môn Học");
        } else {
                xoasv = new xoaSinhVien(item[0], item[1]);
                xoasv.setVisible(true);
        }  
    }//GEN-LAST:event_jbtnXoaSVActionPerformed

    private void jbtnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnThoatActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new GiaoVu().setVisible(true);
    }//GEN-LAST:event_jbtnThoatActionPerformed

    private void jbtnImportDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnImportDiemActionPerformed
        // TODO add your handling code here:
        importExportFile("Choose file import", IMPORT_FILE_SCORE);
    }//GEN-LAST:event_jbtnImportDiemActionPerformed

    private void jbtnXemBangDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnXemBangDiemActionPerformed
        // TODO add your handling code here:
        jsvTableDiem.setRowSelectionAllowed(true);
        jsvTableDiem.setEnabled(true);
                
        DefaultTableModel table = new DefaultTableModel();
       
        String valueComboBox = cbLop_MonHoc.getSelectedItem().toString();  
         String[] a = valueComboBox.split("-");
         Lop_MonHoc lop_MH = th.getLopMH(valueComboBox);
        
         table.setColumnIdentifiers(columnNameDiem);
        
        ArrayList<Diem> listDiem = lop_MH.getListDiem();
        System.out.print("LopMH :" +lop_MH.getTenLopMH().toString());
        int stt = 1;
        if(listDiem.size() > 0){
            for(Diem item : listDiem){
                String[] rows = new String[8];
                rows[0] = String.valueOf(stt);
                rows[1] = item.getSV().getMSSV();
                rows[2] = item.getSV().getTen();
                rows[3] = String.valueOf(item.getDiemGK());
                rows[4] = String.valueOf(item.getDiemCK());
                rows[5] = String.valueOf(item.getDiemKhac());
                rows[6] = String.valueOf(item.getDiemTong());
                rows[7] = item.xepLoai();

                table.addRow(rows);
                stt++;
            }
            jsvTableDiem.setModel(table);
             jsvTableDiem.setVisible(true);
        } else {
            notifyDSDiem.setVisible(true);            
            notifyDSDiem.setText("Chưa Có Bảng Điểm!!!");
            jsvTableDiem.setModel(table);
            JOptionPane.showMessageDialog(null, "!!! Chưa Có Bảng Điểm");
        }
    }//GEN-LAST:event_jbtnXemBangDiemActionPerformed
private void importExportFile(String title, int key) {
        JFileChooser j = new JFileChooser();
        j.setDialogTitle(title);
        int choose = -1;
        switch (key) {
            case IMPORT_FILE:
                choose = j.showOpenDialog(null);
                break;
            case EXPORT_FILE:
                choose = j.showSaveDialog(null);
                break;
             case IMPORT_FILE_SCORE:
               choose = j.showOpenDialog(null);
                break;
        }

        if (choose == JFileChooser.APPROVE_OPTION) {
            File f = j.getSelectedFile();
            switch (key) {
                case IMPORT_FILE:
                    readFile(f);
                    break;
                case EXPORT_FILE:
                    writeFile(f);
                    break;
                 case IMPORT_FILE_SCORE:
                    readFileScore(f);
                    break;
            }
        }
    }
 private void addDataForComboBoxClass(){
        ArrayList<Lop_MonHoc> listLH = th.getListLopMH();
        DefaultComboBoxModel cbModel = new DefaultComboBoxModel();
            
        for (Lop_MonHoc i : listLH) {
            String name = i.getTenLopMH();
            cbModel.addElement(name);   
        }          
        cbLop_MonHoc.setModel(cbModel);
    }
  private void addDataForTableMonHoc(){
        
        String select = getClassNameInComboBox();
        ArrayList<Lop_MonHoc> listLH = th.getListLopMH(); 
        DefaultTableModel tbModel = new DefaultTableModel();
        
        int stt = 1;
        
        for (Lop_MonHoc i : listLH) {
            if(select.equalsIgnoreCase(i.getTenLopMH())){
                jsvTable.setVisible(true);
                tbModel.setColumnIdentifiers(columName);
                                                
                // get danh sách sinh viên và hiển thị lên table    
                ArrayList<SinhVien> listSV = new ArrayList<SinhVien>();
                listSV = i.getListSV();
                for (SinhVien sv : listSV) {
                    
                    String[] info = new String[5];
                    info[0] = String.valueOf(stt);
                    info[1] = sv.getMSSV();
                    info[2] = sv.getTen();
                    if (sv.getGioiTinh() == 0) {
                        info[3] = "Nữ";
                    } else {
                        info[3] = "Nam";
                    }
                    info[4] = sv.getCMND();

                    tbModel.addRow(info);
                    stt++;
                }
                jsvTable.setModel(tbModel);
            } 
            else{
                tbModel.setColumnIdentifiers(columName);
                jsvTable.setModel(tbModel);
            }            
        }
    }
  
    private void readFile(File file) {
         try {
            try (FileReader reader = new FileReader(file)) {
                BufferedReader buffer = new BufferedReader(reader);
                String line;
                line = buffer.readLine();
                String[] tenLop = line.split(",");
                
                ArrayList<Lop_MonHoc>  listLop_MonHoc = th.getListLopMH();
            
                String[] Lop_MH = tenLop[0].split("-");
               
                   Lop_MonHoc lmh = new Lop_MonHoc();
                    lmh.setTenLopMH(tenLop[0]);
                       
                    //line = buffer.readLine()+1 ;
                    while ((line = buffer.readLine()) != null) {
                        String[] info = line.split(",");
                        
                        SinhVien sv = new SinhVien();
                        sv.setMSSV(info[1]);
                        sv.setTen(info[2]);
                           int gt = -1;

                        if (info[3].equalsIgnoreCase("Nam")) {
                            gt = 1;
                        }
                        if (info[3].equalsIgnoreCase("Nữ")) {
                            gt = 0;
                        }
                        sv.setCMND(info[4]);
                    
                        sv.setGioiTinh(gt);
                        lmh.themSV(sv);
                    }
                    boolean bool = true;
                for(Lop_MonHoc l : listLop_MonHoc)
                {
                    if(l.isExists(Lop_MH[0], Lop_MH[0]))
                    {
                         int index = listLop_MonHoc.indexOf(l);
                         listLop_MonHoc.set(index, l);
                         bool = false;
                    }
                }
                if(bool = true)
                {
                    th.themLopMH(lmh);
                }
                
                buffer.close();
            }
                   initLayout();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error to open file: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void writeFile(File file) {
        try{            
            file.createNewFile();
            FileOutputStream fos = new FileOutputStream(file);
            
            BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(fos, StandardCharsets.UTF_8));
                        
            String tenLop = getClassNameInComboBox();
            LopHoc lop = th.getLopHoc(tenLop);
            
            writer.append(tenLop);
            writer.append('\n');
            
            writer.append("STT,");
            writer.append(columName[1]);
            writer.append(",");
            writer.append(columName[2]);
            writer.append(",");
            writer.append(columName[3]);
            writer.append(",");
            writer.append(columName[4]);
            writer.append('\n');
            ArrayList<SinhVien> dsSV = new ArrayList<SinhVien>();
            dsSV = lop.getListSinhVien();
            
            if (dsSV.size() > 0) {
                int stt = 1;
                // Lấy danh sách học sinh trong lớp
                for (SinhVien sv : dsSV) {
                    writer.append(Integer.toString(stt) + ',');                    
                    writer.append(sv.getMSSV());
                    writer.append(',');
                    writer.append(sv.getTen());
                    writer.append(',');
                    if (sv.getGioiTinh() == 1) {
                        writer.append("Nam");
                    } else {
                        writer.append("Nữ");
                    }
                    writer.append(',');
                    writer.append(sv.getCMND());
                    writer.append('\n');
                    stt++;
                }
            }
            writer.close();
             JOptionPane.showMessageDialog(null, "Export File!", "Success", JOptionPane.INFORMATION_MESSAGE);
   
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Error to export file: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
     private void readFileScore(File file) {
        try{
            try (FileReader reader = new FileReader(file)) {
            BufferedReader buffer = new BufferedReader(reader);

            String line;
            line = buffer.readLine();
            
             String[] tenLop = line.split(",");
                String[] Lop_MH = tenLop[0].split("-");
                Lop_MonHoc lh = th.getLopMH(tenLop[0]);
                ArrayList<Diem> listDiem = lh.getListDiem();
            listDiem.clear();
            
            while((line = buffer.readLine()) != null){
               System.out.println("listDiem: " + listDiem.size());
                String[] tableDiem = line.split(",");
                 
                Diem diemSV = new Diem();
                SinhVien s = new SinhVien(tableDiem[0], tableDiem[1]);
                System.out.println(tableDiem[0]);
                diemSV.setSV(s);                
                diemSV.setDiemGK(Float.parseFloat(tableDiem[2]));
                diemSV.setDiemCK(Float.parseFloat(tableDiem[3]));
                diemSV.setDiemKhac(Float.parseFloat(tableDiem[4]));
                diemSV.setDiemTong(Float.parseFloat(tableDiem[5]));

                listDiem.add(diemSV);
            }
            lh.setListDiemSV(listDiem);
            th.setLopMH(Lop_MH[0],Lop_MH[1], lh);
              System.out.println(Lop_MH[0]);
                System.out.println(Lop_MH[1]);
            buffer.close();
             System.out.print(tenLop[0]);
            }
        }catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Error to export file: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }        
    }
    
    private String getClassNameInComboBox(){
        String result = cbLop_MonHoc.getSelectedItem().toString();
        return result;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyMonHoc().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JComboBox cbLop_MonHoc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnImportDiem;
    private javax.swing.JButton jbtnThoat;
    private javax.swing.JButton jbtnXemBangDiem;
    private javax.swing.JButton jbtnXoaSV;
    private javax.swing.JTable jsvTable;
    private javax.swing.JTable jsvTableDiem;
    private javax.swing.JLabel notifyDSDiem;
    // End of variables declaration//GEN-END:variables
}
